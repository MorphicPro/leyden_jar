name: CD
on:
  push:
    branches:
      - main
jobs:
  Test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:11
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: leyden_jar_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Cache mix modules
        uses: actions/cache@v1
        env:
          cache-name: cache-mix-modules
        with:
          path: deps # mix cache files are stored in `deps` in the root of the project folder
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup elixir
        uses: actions/setup-elixir@v1.5.0
        with:
          elixir-version: 1.11.2 # Define the elixir version [required]
          otp-version: 23.1.1 # Define the OTP version [required]
          experimental-otp: true
      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Run Tests
        env:
          MIX_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mix coveralls.github

  Buid-Release:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup elixir
        uses: actions/setup-elixir@v1.5.0
        with:
          elixir-version: 1.11.2 # Define the elixir version [required]
          otp-version: 23.1.1 # Define the OTP version [required]
          experimental-otp: true
      - name: Cache mix modules
        uses: actions/cache@v1
        env:
          cache-name: cache-mix-modules
        with:
          path: deps
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Elixir Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only prod
      - name: Setup nodejs
        uses: actions/setup-node@v1
        with:
          node-version: "14.13.1"
      - name: Cache npm modules
        uses: actions/cache@v1
        env:
          cache-name: cache-npm-modules
        with:
          path: assets/node_module
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Npm Dependencies
        working-directory: ./assets
        run: npm install
      - name: Compile elixir
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: MIX_ENV=prod mix compile
      - name: Compile assets
        run: |
          npm run deploy --prefix ./assets
          mix phx.digest
      - name: Build Mix Release
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: MIX_ENV=prod mix release --version ${{ github.sha }}
      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          source: "_build/prod/leyden_jar-${{ github.sha }}.tar.gz"
          target: "/tmp"
      - name: Extract release command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p leyden_jar
            mkdir -p leyden_jar/releases
            mkdir -p leyden_jar/releases/${{ github.sha }}
            tar -xzvf /tmp/_build/prod/prod-${{ github.sha }}.tar.gz --directory ~/leyden_jar/releases/${{ github.sha}}/
            ./leyden_jar/leyden_jar stop
            ln -sfT ~/leyden_jar/releases/${{ github.sha}}/ ~/leyden_jar/current
            ./leyden_jar/leyden_jar start
      - name: Run migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            ./leyden_jar/current/bin/prod eval "LeydenJar.Release.migrate"
